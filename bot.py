import os
import re
import requests
import tempfile
import instaloader
import logging
import time
import signal
import random
import json
from datetime import datetime
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
INSTA_USERNAME = os.getenv('INSTAGRAM_USERNAME')
INSTA_PASSWORD = os.getenv('INSTAGRAM_PASSWORD')

if not TOKEN:
    raise ValueError("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å TELEGRAM_BOT_TOKEN")

class InstagramDownloader:
    def __init__(self):
        # –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —Å–µ—Å—Å–∏–∏
        session_dir = os.path.join(tempfile.gettempdir(), f"instaloader_session_{int(time.time())}")
        os.makedirs(session_dir, exist_ok=True)
        
        self.L = instaloader.Instaloader(
            dirname_pattern=session_dir,
            download_pictures=False,
            download_videos=False,
            save_metadata=False,
            compress_json=False,
            sleep=True,
            quiet=True,
            request_timeout=120,
            user_agent=None  # –ë—É–¥–µ–º —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
        )
        
        # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ User-Agent
        self.user_agents = [
            'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36',
            'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.1 Safari/605.1.15',
            'Mozilla/5.0 (iPhone; CPU iPhone OS 16_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.6 Mobile/15E148 Safari/604.1'
        ]
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ User-Agent
        self.set_random_user_agent()
        
        # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Instagram
        self.authenticate()
        
        self.request_delay = random.randint(5, 15)  # –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
        self.max_retries = 3
        self.session_file = os.path.join(session_dir, "session.json")

    def set_random_user_agent(self):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π User-Agent"""
        user_agent = random.choice(self.user_agents)
        self.L.context._session.headers.update({
            'User-Agent': user_agent,
            'Accept-Language': 'en-US,en;q=0.9',
            'Accept-Encoding': 'gzip, deflate, br',
            'Connection': 'keep-alive',
            'DNT': '1'
        })
        logger.info(f"üîÑ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω User-Agent: {user_agent[:50]}...")

    def authenticate(self):
        """–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏"""
        if not INSTA_USERNAME or not INSTA_PASSWORD:
            logger.warning("‚ö†Ô∏è –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Instagram –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã. –†–∞–±–æ—Ç–∞–µ–º –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏")
            return
            
        for attempt in range(3):
            try:
                # –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é
                if os.path.exists(self.session_file):
                    with open(self.session_file, 'r') as f:
                        session_data = json.load(f)
                    
                    if time.time() - session_data['timestamp'] < 86400:  # 24 —á–∞—Å–∞
                        self.L.context.load_session(INSTA_USERNAME, session_data['session'])
                        logger.info("‚úÖ –°–µ—Å—Å–∏—è Instagram –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ –∫—ç—à–∞")
                        return
                
                # –ù–æ–≤–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
                self.L.login(INSTA_USERNAME, INSTA_PASSWORD)
                logger.info("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Instagram")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
                session_data = {
                    'session': self.L.context.get_session().get_dict(),
                    'timestamp': time.time()
                }
                with open(self.session_file, 'w') as f:
                    json.dump(session_data, f)
                
                return
                
            except instaloader.exceptions.BadCredentialsException:
                logger.error("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Instagram")
                return
            except instaloader.exceptions.ConnectionException as e:
                logger.warning(f"üîÑ –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ({attempt+1}/3): {str(e)}")
                time.sleep(5)
            except Exception as e:
                logger.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {str(e)}")
                time.sleep(10)
        
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ Instagram –ø–æ—Å–ª–µ 3 –ø–æ–ø—ã—Ç–æ–∫")

    async def download_media(self, url: str, update: Update):
        """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–¥–∏–∞"""
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º shortcode
            shortcode = self._extract_shortcode(url)
            if not shortcode:
                return "‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ Instagram. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å—Ç—ã, Reels –∏ IGTV."

            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
            with tempfile.TemporaryDirectory() as temp_dir:
                for attempt in range(1, self.max_retries + 1):
                    try:
                        # –û–±–Ω–æ–≤–ª—è–µ–º User-Agent –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
                        self.set_random_user_agent()
                        
                        post = instaloader.Post.from_shortcode(self.L.context, shortcode)
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
                        if post.owner_profile.is_private:
                            return "‚ùå –ù–µ –º–æ–≥—É —Å–∫–∞—á–∞—Ç—å: –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π. –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –ø—É–±–ª–∏—á–Ω—ã–º–∏ –ø—Ä–æ—Ñ–∏–ª—è–º–∏."
                        
                        media_items = self._get_media_items(post)
                        if not media_items:
                            return "‚ùå –ú–µ–¥–∏–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"

                        results = []
                        for idx, (media_type, media_url) in enumerate(media_items, 1):
                            result = await self._process_media(
                                media_type, media_url, temp_dir, update, 
                                f"{idx}/{len(media_items)}"
                            )
                            results.append(result)
                            time.sleep(random.uniform(1, 3))  # –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞

                        return "‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" if all(results) else "‚ö†Ô∏è –í–æ–∑–Ω–∏–∫–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º–µ–¥–∏–∞"
                    
                    except instaloader.exceptions.QueryReturnedBadRequestException as e:
                        if "401" in str(e):
                            logger.warning(f"üîÑ –û—à–∏–±–∫–∞ 401, –ø–æ–ø—ã—Ç–∫–∞ {attempt}/{self.max_retries}")
                            self.authenticate()  # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
                            time.sleep(5)
                        else:
                            raise
                    except requests.exceptions.RequestException as e:
                        logger.warning(f"üîÑ –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞, –ø–æ–ø—ã—Ç–∫–∞ {attempt}/{self.max_retries}: {str(e)}")
                        time.sleep(10)

                return "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ø—ã—Ç–æ–∫"

        except instaloader.exceptions.InstaloaderException as e:
            logger.error(f"Instaloader error: {e}")
            return f"‚ùå –û—à–∏–±–∫–∞ Instagram: {str(e)}"
        except Exception as e:
            logger.exception("Unexpected error")
            return f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}"

    # ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: _extract_shortcode, _get_media_items, _process_media)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
downloader = InstagramDownloader()

# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π: start, handle_message, post_init, main)
